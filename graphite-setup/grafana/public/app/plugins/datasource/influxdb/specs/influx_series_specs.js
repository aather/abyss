/*! grafana - v2.5.0 - 2015-10-28
 * Copyright (c) 2015 Torkel Ã–degaard; Licensed Apache-2.0 */

define(["require","exports","app/plugins/datasource/influxdb/influx_series","test/lib/common"],function(a,b,c,d){d.describe("when generating timeseries from influxdb response",function(){d.describe("given multiple fields for series",function(){var a={alias:"",series:[{name:"cpu",tags:{app:"test",server:"server1"},columns:["time","mean","max","min"],values:[[1431946625e3,10,11,9],[1431946626e3,20,21,19]]}]};d.describe("and no alias",function(){d.it("should generate multiple datapoints for each column",function(){var b=new c(a),e=b.getTimeSeries();d.expect(e.length).to.be(3),d.expect(e[0].target).to.be("cpu.mean {app: test, server: server1}"),d.expect(e[0].datapoints[0][0]).to.be(10),d.expect(e[0].datapoints[0][1]).to.be(1431946625e3),d.expect(e[0].datapoints[1][0]).to.be(20),d.expect(e[0].datapoints[1][1]).to.be(1431946626e3),d.expect(e[1].target).to.be("cpu.max {app: test, server: server1}"),d.expect(e[1].datapoints[0][0]).to.be(11),d.expect(e[1].datapoints[0][1]).to.be(1431946625e3),d.expect(e[1].datapoints[1][0]).to.be(21),d.expect(e[1].datapoints[1][1]).to.be(1431946626e3),d.expect(e[2].target).to.be("cpu.min {app: test, server: server1}"),d.expect(e[2].datapoints[0][0]).to.be(9),d.expect(e[2].datapoints[0][1]).to.be(1431946625e3),d.expect(e[2].datapoints[1][0]).to.be(19),d.expect(e[2].datapoints[1][1]).to.be(1431946626e3)})}),d.describe("and simple alias",function(){d.it("should use alias",function(){a.alias="new series";var b=new c(a),e=b.getTimeSeries();d.expect(e[0].target).to.be("new series"),d.expect(e[1].target).to.be("new series"),d.expect(e[2].target).to.be("new series")})}),d.describe("and alias patterns",function(){d.it("should replace patterns",function(){a.alias="alias: $m -> $tag_server ([[measurement]])";var b=new c(a),e=b.getTimeSeries();d.expect(e[0].target).to.be("alias: cpu -> server1 (cpu)"),d.expect(e[1].target).to.be("alias: cpu -> server1 (cpu)"),d.expect(e[2].target).to.be("alias: cpu -> server1 (cpu)")})})}),d.describe("given measurement with default fieldname",function(){var a={series:[{name:"cpu",tags:{app:"test",server:"server1"},columns:["time","value"],values:[["2015-05-18T10:57:05Z",10],["2015-05-18T10:57:06Z",12]]},{name:"cpu",tags:{app:"test2",server:"server2"},columns:["time","value"],values:[["2015-05-18T10:57:05Z",15],["2015-05-18T10:57:06Z",16]]}]};d.describe("and no alias",function(){d.it("should generate label with no field",function(){var b=new c(a),e=b.getTimeSeries();d.expect(e[0].target).to.be("cpu {app: test, server: server1}"),d.expect(e[1].target).to.be("cpu {app: test2, server: server2}")})})}),d.describe("given two series",function(){var a={alias:"",series:[{name:"cpu",tags:{app:"test",server:"server1"},columns:["time","mean"],values:[[1431946625e3,10],[1431946626e3,12]]},{name:"cpu",tags:{app:"test2",server:"server2"},columns:["time","mean"],values:[[1431946625e3,15],[1431946626e3,16]]}]};d.describe("and no alias",function(){d.it("should generate two time series",function(){var b=new c(a),e=b.getTimeSeries();d.expect(e.length).to.be(2),d.expect(e[0].target).to.be("cpu.mean {app: test, server: server1}"),d.expect(e[0].datapoints[0][0]).to.be(10),d.expect(e[0].datapoints[0][1]).to.be(1431946625e3),d.expect(e[0].datapoints[1][0]).to.be(12),d.expect(e[0].datapoints[1][1]).to.be(1431946626e3),d.expect(e[1].target).to.be("cpu.mean {app: test2, server: server2}"),d.expect(e[1].datapoints[0][0]).to.be(15),d.expect(e[1].datapoints[0][1]).to.be(1431946625e3),d.expect(e[1].datapoints[1][0]).to.be(16),d.expect(e[1].datapoints[1][1]).to.be(1431946626e3)})}),d.describe("and simple alias",function(){d.it("should use alias",function(){a.alias="new series";var b=new c(a),e=b.getTimeSeries();d.expect(e[0].target).to.be("new series")})}),d.describe("and alias patterns",function(){d.it("should replace patterns",function(){a.alias="alias: $m -> $tag_server ([[measurement]])";var b=new c(a),e=b.getTimeSeries();d.expect(e[0].target).to.be("alias: cpu -> server1 (cpu)"),d.expect(e[1].target).to.be("alias: cpu -> server2 (cpu)")})})}),d.describe("given measurement with dots",function(){var a={alias:"",series:[{name:"app.prod.server1.count",tags:{},columns:["time","mean"],values:[[1431946625e3,10],[1431946626e3,12]]}]};d.it("should replace patterns",function(){a.alias="alias: $1 -> [[3]]";var b=new c(a),e=b.getTimeSeries();d.expect(e[0].target).to.be("alias: prod -> count")})})})});